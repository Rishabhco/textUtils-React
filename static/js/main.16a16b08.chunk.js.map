{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","newtext","navigator","clipboard","writeText","console","log","trim","split","length","defaultProps","aboutText","Alert","alert","lowers","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16a16b08.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Enter title Here\",\r\n  aboutText: \"Set a about here\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Uppercase Done\",\"success\");\r\n    }\r\n    \r\n    const handleLowClick=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Lowercase Done\",\"success\");\r\n    }\r\n    \r\n    let handleClClick = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    }\r\n    \r\n    let COPYIT=(event)=>{\r\n        setText(event.target.value);\r\n        let newtext=navigator.clipboard.writeText(text);\r\n        console.log(newtext);\r\n        props.showAlert(\"text copied successfully\",\"success\");\r\n    };\r\n\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text,setText]=useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'#343a40',color:props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick} >Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleLowClick} >Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClClick}>Clear</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={COPYIT}>Copy</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\r\n           <p>{text.trim() === '' ? 0 : text.trim().split(' ').length} words and {text.length} characters</p>\r\n           <p>{0.008*(text.trim() === '' ? 0 : text.trim().split(' ').length)} Minutes read</p>\r\n           <h2>Preview</h2>\r\n            <div>{text.length>0 ?text:'Write something in textbox to see here'}</div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(lowers)=>{\r\n        let lower=lowers.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#343a40';\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = 'TextUtils-Dark Mode'\n      // setInterval(() => {\n      //   document.title='TextUtils is Amazing'\n      // }, 1500);\n      // setInterval(() => {\n      //   document.title='TextUtils Install Now'\n      // }, 2000);\n    }\n\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = 'TextUtils-Light Mode'\n    }\n  }\n\n  return (\n    <>\n        {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route path=\"/about\" element={<About/>}/> */}\n            {/* <Route path=\"/\" element={<TextForm heading=\"Enter the text to analyse\" showAlert={showAlert} mode={mode} />}/>   */}\n            <TextForm heading=\"Enter the text to analyse\" showAlert={showAlert} mode={mode} />\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}